{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\redberry-project\\\\form\\\\src\\\\components\\\\Step1.jsx\",\n  _s2 = $RefreshSig$();\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useStateMachine } from \"little-state-machine\";\nimport { useNavigate } from \"react-router-dom\";\nimport updateAction from \"./UpdateAction\";\nimport { useState } from \"react\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Step1() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    state,\n    actions\n  } = useStateMachine({\n    updateAction\n  });\n  let navigate = useNavigate();\n  const onSubmit = data => {\n    actions.updateAction(data);\n    navigate(\"/Step2\");\n    console.log(actions);\n  };\n  // const [value,setValue]=useState({firstName:'',lastName:''})\n  // const handleChange=(e)=>{\n  // setValue(e.target.value)\n  // }\n\n  const [image, setImage] = React.useState(\"\");\n  const imageRef = React.useRef(null);\n  function useDisplayImage() {\n    _s();\n    const [result, setResult] = React.useState(\"\");\n    function uploader(e) {\n      const imageFile = e.target.files[0];\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", e => {\n        setResult(e.target.result);\n      });\n      reader.readAsDataURL(imageFile);\n    }\n    return {\n      result,\n      uploader\n    };\n  }\n  _s(useDisplayImage, \"qoGl22B7WAXz9bHytSnRSI+DHp8=\");\n  const {\n    result,\n    uploader\n  } = useDisplayImage();\n  const onImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      let file = event.target.files[0];\n      reader.onloadend = () => {\n        setData({\n          ...mydata,\n          imagePreview: reader.result,\n          file: file\n        });\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Step 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('firstName'),\n          defaultValue: state.firstName,\n          name: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('lastName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => {\n            setImage(e.target.files[0]);\n            uploader(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), result && /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: imageRef,\n          src: result,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s2(Step1, \"QVmGVroHcB9RG9N5jGg3B4JsAcs=\", false, function () {\n  return [useForm, useStateMachine, useNavigate, useDisplayImage];\n});\n_c = Step1;\nexport default Step1;\nvar _c;\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"names":["useForm","Controller","useStateMachine","useNavigate","updateAction","useState","Step1","register","handleSubmit","formState","errors","state","actions","navigate","onSubmit","data","console","log","image","setImage","React","imageRef","useRef","useDisplayImage","result","setResult","uploader","e","imageFile","target","files","reader","FileReader","addEventListener","readAsDataURL","onImageChange","event","file","onloadend","setData","mydata","imagePreview","firstName"],"sources":["C:/Users/User/Desktop/redberry-project/form/src/components/Step1.jsx"],"sourcesContent":["import { useForm, Controller } from \"react-hook-form\";\r\nimport { useStateMachine } from \"little-state-machine\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport updateAction from \"./UpdateAction\";\r\nimport { useState } from \"react\";\r\nimport '../App.css'\r\n function Step1(){\r\n    const {register, handleSubmit,formState:{errors}}=useForm();\r\n\r\n    const {state, actions } = useStateMachine({ updateAction });\r\n    let navigate=useNavigate();\r\n    const onSubmit=(data)=>{\r\n        actions.updateAction(data);\r\n        navigate(\"/Step2\");\r\n        console.log(actions)\r\n    }\r\n    // const [value,setValue]=useState({firstName:'',lastName:''})\r\n    // const handleChange=(e)=>{\r\n        // setValue(e.target.value)\r\n    // }\r\n\r\n    const [image, setImage] = React.useState(\"\");\r\n    const imageRef = React.useRef(null);\r\n  \r\n    function useDisplayImage() {\r\n      const [result, setResult] = React.useState(\"\");\r\n  \r\n      function uploader(e) {\r\n        const imageFile = e.target.files[0];\r\n  \r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", (e) => {\r\n          setResult(e.target.result);\r\n        });\r\n  \r\n        reader.readAsDataURL(imageFile);\r\n      }\r\n  \r\n      return { result, uploader };\r\n    }\r\n  \r\n    const { result, uploader } = useDisplayImage();\r\n  \r\n\r\n    const onImageChange = event => {\r\n        if (event.target.files && event.target.files[0]) {\r\n          let reader = new FileReader();\r\n          let file = event.target.files[0];\r\n          reader.onloadend = () => {\r\n            setData({\r\n              ...mydata,\r\n              imagePreview: reader.result,\r\n              file: file\r\n            });\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n      };\r\n    return(\r\n        <div>\r\n            \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <h2>Step 1</h2>\r\n              <label>\r\n                First Name:\r\n                <input\r\n                {...register('firstName')}\r\n                defaultValue={state.firstName}\r\n                name='firstName'\r\n                />\r\n              </label>\r\n              <label>\r\n                Last Name:\r\n                <input\r\n                {...register('lastName')}\r\n                 />\r\n              </label>\r\n              \r\n              <div className=\"App\">\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => {\r\n          setImage(e.target.files[0]);\r\n          uploader(e);\r\n        }}\r\n      />\r\n      {result && <img ref={imageRef} src={result} alt=\"\" />}\r\n    </div>\r\n              \r\n            </form>\r\n            <ul>\r\n                <li></li>\r\n                <li></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Step1"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}